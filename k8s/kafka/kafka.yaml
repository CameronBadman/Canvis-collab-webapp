apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  serviceName: "kafka"
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: wurstmeister/kafka:latest
          ports:
            - containerPort: 9092  # External Kafka listener port
            - containerPort: 9093  # Internal Kafka listener port
          env:
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL
              value: PLAINTEXT
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_ADVERTISED_LISTENERS
              value: OUTSIDE://localhost:9092,INSIDE://localhost:9093  # Advertise as localhost (internal and external)
            - name: KAFKA_LISTENERS
              value: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092  # Listen on all interfaces for internal and external
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            - name: KAFKA_LISTENER_NAME_INSIDE
              value: INSIDE
            - name: KAFKA_LISTENER_NAME_OUTSIDE
              value: OUTSIDE
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: INSIDE  # Use the internal listener for inter-broker communication
            - name: KAFKA_LISTENER_PORT
              value: "9092"
            - name: KAFKA_LISTENER_PORT_INTERNAL
              value: "9093"
          volumeMounts:
            - name: data
              mountPath: /var/lib/kafka
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  ports:
    - port: 9092
      targetPort: 9092  # External port for Kafka service
  clusterIP: None  # Headless service for StatefulSet
  selector:
    app: kafka
