apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-api
  namespace: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: account-api
  template:
    metadata:
      labels:
        app: account-api
    spec:
      containers:
        - name: account-api
          image: account-api:latest
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: cassandra-config        # Cassandra ConfigMap
            - configMapRef:
                name: redis-config            # Redis ConfigMap
            - configMapRef:
                name: cognito-config          # AWS Cognito ConfigMap
            - secretRef:
                name: cassandra-secrets       # Cassandra Secret
            - secretRef:
                name: backend-redis-secret    # Redis Secret
            - secretRef:
                name: cognito-secret          # AWS Cognito Secret
          env:
            - name: CASSANDRA_HOST
              value: "cassandra.db.svc.cluster.local"
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: redis-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: redis-config
                  key: REDIS_PORT
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-redis-secret
                  key: REDIS_PASSWORD
            - name: COGNITO_USER_POOL_ID
              valueFrom:
                configMapKeyRef:
                  name: cognito-config
                  key: COGNITO_USER_POOL_ID
            - name: COGNITO_APP_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: cognito-config
                  key: COGNITO_APP_CLIENT_ID
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
